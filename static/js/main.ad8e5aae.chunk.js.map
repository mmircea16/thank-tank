{"version":3,"sources":["config.js","data/spreadsheet.js","components/ThankText.js","components/ThankCard.js","helpers/randomColour.js","data/card_store.js","components/FlippingCards.js","components/App.js","index.js"],"names":["clientId","scope","spreadsheetId","speedLowerBound","speedUpperBound","gridSize","timePerWord","ranges","mapping","name","from","message","secret","checkAuth","immediate","Promise","resolve","window","gapi","load","console","log","config","client","init","then","loadData","reject","sheets","spreadsheets","values","batchGet","response","allThanks","result","valueRanges","flatMap","range","filterEmptyThankees","error","filter","row","ThankText","props","state","targetPosition","easeType","speed","updateInterval","scrollTargetRef","this","refs","scrollSection","isEnabled","autoScrollEnabled","ref","className","Component","ThankCard","autoScroll","shouldAutoScroll","bind","flipped","includes","setState","setTimeout","thankedBy","getRandomColour","colours","Math","floor","random","length","actualDataPromise","isPending","lastShown","lengthOfData","timeouts","fetchData","tempPromise","authResult","timeout","minRefreshRate","timeoutInSec","forEach","clearTimeout","push","CardStore","rows","showIndex","rowCount","getShowIndex","FlippingCards","store","back","front","frontColour","backColour","flip","getRandomWaitTime","numberOfWords","split","getNext","card","App","loading","hasContent","authenticated","onLoad","onError","updateSigninStatus","handleAuth","auth2","getAuthInstance","isSignedIn","listen","signedIn","get","data","renderContent","onClick","authenticate","Array","fill","map","index","key","e","preventDefault","signIn","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad8e5aae.chunk.js","sourcesContent":["export default {\n    clientId: '302154217901-42dk7gumote0945geu0bq6vpotaa4qqu.apps.googleusercontent.com', //google client ID\n    scope: 'https://www.googleapis.com/auth/spreadsheets',\n    spreadsheetId: '17lpXtlODcFYHK5kdDSpuO0sXimVwUrzQMbEnMVj8h0c', //ID for the spreadsheet\n    speedLowerBound: 25, //lower bound for flip randomisation\n    speedUpperBound: 35, //upper bound for flip randomisation\n    gridSize: 12, //grid size for the cards\n    timePerWord: 0.1, //to work out how long to show a message\n    ranges: ['A2:F', 'Form Responses 1!A2:F'], //range for the data columns in the spreadsheet\n    mapping: {\n        //data mapping columns from spreadsheet\n        name: 3,\n        from: 2,\n        message: 4,\n        secret: 5\n    }\n};\n","import config from '../config';\n/**\n * Get the user authentication status\n */\nexport function checkAuth(immediate) {\n  return new Promise((resolve) => {\n\n    window.gapi.load('client:auth2', () => {\n      console.log(\"config\", config)\n      window.gapi.client.init({\n        // 'apiKey': config.apiKey,\n        'clientId': config.clientId,\n        'scope': config.scope,\n        'discoveryDocs': [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"]\n      }).then( () => {\n        console.log('resolve');\n        resolve()\n      });\n    });\n  });\n}\n\n/**\n * Load the quotes from the spreadsheet\n * Embellish them with user own likes\n */\nexport function loadData() {\n  var promise = new Promise((resolve, reject) => {\n    window.gapi.client.load('sheets', 'v4', () => {\n      window.gapi.client.sheets.spreadsheets.values.batchGet({\n        spreadsheetId: config.spreadsheetId,\n        ranges: config.ranges,\n      }).then(\n        (response) => {\n          let allRanges = response.result.valueRanges;\n          let allThanks = allRanges.flatMap(range => range.values);\n          resolve(filterEmptyThankees(allThanks));\n        },\n        (response) => {\n          reject(false, response.result.error);\n        }\n      );\n    });\n\n  });\n\n  return promise;\n}\n\nlet filterEmptyThankees = function (values) {\n  if (!values) return [];\n\n  return values.filter(row => row[config.mapping.name] && (row[config.mapping.name] !== ''))\n};","import React, { Component } from 'react';\nimport ReactAutoScroll from 'react-to-target-auto-scroll'\n\nexport default class ThankText extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...props };\n    }\n\n    render(){\n        return (\n            <ReactAutoScroll\n            targetPosition={9000}\n            easeType={'linear'}\n            speed={1}\n            updateInterval={60}\n            scrollTargetRef={this.refs.scrollSection}\n            isEnabled={this.props.autoScrollEnabled}>\n                <section ref=\"scrollSection\" className=\"thankText\">{this.props.message}</section>\n            </ReactAutoScroll>)\n    }\n}\n","import React, { Component } from 'react';\n\nimport ThankText from './ThankText'\n\nexport default class ThankCard extends Component{\n    constructor(props){\n        super(props);\n        this.state = { ...props, autoScroll: false};\n        this.shouldAutoScroll = this.shouldAutoScroll.bind(this);\n    }\n\n    shouldAutoScroll() {\n        var result = (this.props.flipped === 'flipped' && this.props.className.includes('back')) ||\n                     (this.props.flipped !== 'flipped' && this.props.className.includes('front'));\n\n        if(result !== this.state.autoScroll){\n            this.setState({autoScroll: result});\n        }\n    }\n\n    componentDidUpdate(){\n        if(!this.state.autoScroll)\n        {\n            setTimeout(this.shouldAutoScroll, 4000); \n        } else{\n            this.shouldAutoScroll();\n        }       \n    }\n\n    componentDidMount(){\n        this.shouldAutoScroll();\n    }\n\n    render(){     \n        //this.shouldAutoScroll();  \n        var row = this.props.row;\n        var thankedBy = row.secret === 'Keep it a secret'? 'Anonymous' : row.from;\n        return (<article className={'thankCard ' + this.props.className}>\n            <header><strong>Thank you <span className=\"name\">{row.name}!</span></strong></header>\n            <ThankText message={row.message} autoScrollEnabled={this.state.autoScroll}/>\n            <footer>from {thankedBy}</footer>\n        </article>);\n    }\n}","\nexport function getRandomColour(){\n    var colours = [\n        'blueCard', \n        'greenCard',         \n        'pinkCard', \n        'redCard',\n        'orangeCard', \n        'purpleCard']\n    \n    return colours[Math.floor(Math.random()*colours.length)];\n}","\"use srtict\";\nimport { checkAuth, loadData } from './spreadsheet'\nimport config from '../config';\n\nvar mapping = config.mapping;\nvar actualDataPromise;\nvar isPending = false;\nvar lastShown = -1;\nvar lengthOfData = 0;\nvar timeouts = [];\n\nfunction fetchData() {\n    if (!isPending) {\n\n        isPending = true;\n        var tempPromise = new Promise((resolve) => {\n            checkAuth(true)\n                .then((authResult) => {\n                    loadData()\n                        .then(resolve)\n                        .then(timeout.bind(null, config.minRefreshRate));\n                });\n        });\n        tempPromise.then(() => {actualDataPromise = tempPromise});\n        if (!actualDataPromise) actualDataPromise = tempPromise;\n        timeout(config.minRefreshRate * 2);\n    }\n}\n\nfunction timeout(timeoutInSec) {\n    var timeout = setTimeout(() => {\n        isPending = false\n        timeouts.forEach(timeout => clearTimeout(timeout));\n        timeouts = [];\n    }, timeoutInSec * 1000);\n    timeouts.push(timeout);\n}\n\nfunction getShowIndex(rowCount) {\n    var showIndex = lastShown + 1;\n    if (showIndex < rowCount)\n        return showIndex;\n    return Math.floor(Math.random() * rowCount);\n}\n\nclass CardStore {\n    constructor() {\n        fetchData();\n    }\n\n    getNext() {\n        if (lengthOfData - 1 <= lastShown) {\n            fetchData();\n        }\n        return new Promise((resolve, reject) => {\n            actualDataPromise.then((rows) => {\n                lengthOfData = rows.length;\n                var showIndex = getShowIndex(rows.length);\n                var from = (rows[showIndex][mapping.from]) || 'Anonymous';\n                resolve({\n                    name: rows[showIndex][mapping.name] || '',\n                    message: rows[showIndex][mapping.message] || '',\n                    from: from,\n                    secret:  rows[showIndex][mapping.secret]\n                });\n                lastShown = showIndex > lastShown ? showIndex : lastShown;\n            });\n        });\n    }\n}\n\nexport function reset() {\n    console.warn('depricated call reset (only allowed in tests)');\n    lastShown = -1;\n    isPending = false;\n    lengthOfData = 0;\n    actualDataPromise = null;\n}\n\nexport default function getInstance() {\n    return new CardStore();\n}","import React, { Component } from 'react';\nimport config from '../config';\nimport ThankCard from './ThankCard';\nimport { getRandomColour } from '../helpers/randomColour';\nimport getCardStore from '../data/card_store';\n\nexport default class FlippingCards extends Component {\n    constructor(props) {\n        super(props);\n        this.store = getCardStore();\n        this.state = {\n            flipped: false,\n            back:{name:'', message:'', from:''},\n            front:{name:'', message:'', from:''},\n                        frontColour: getRandomColour(),\n                        backColour: getRandomColour()\n        };\n        this.flip = this.flip.bind(this);\n        this.getRandomWaitTime = this.getRandomWaitTime.bind(this);\n    }\n\n    getRandomWaitTime() {\n        var message = this.state.back.message;\n        if (this.state.flipped === 'flipped') {\n            message = this.state.front.message;\n        }\n        var numberOfWords = message.split(' ').length\n\n        var baseTime = Math.floor(Math.random() * (config.speedUpperBound - config.speedLowerBound + 1)) + config.speedLowerBound;\n        var extraTime = numberOfWords * config.timePerWord;\n        var timeToWait = 1000 * (baseTime + extraTime);\n\n        return timeToWait;\n    }\n\n    componentDidMount() {\n        this.store.getNext().then((card) => {\n            this.setState({ front: card });\n        });\n\n        setTimeout(this.flip, this.getRandomWaitTime());\n    }\n\n    flip() {\n        var flipped = this.state.flipped\n        if (!flipped) {\n            this.store.getNext()\n                .then((card) =>\n                    this.setState({\n                        flipped: 'flipped',\n                        backColour: getRandomColour(),\n                        back: card\n                    }));\n        } else {\n            this.store.getNext()\n                .then((card) =>{\n                    this.setState({\n                        flipped: '',\n                        frontColour: getRandomColour(),\n                        front: card\n                    });\n                });\n        }\n\n        setTimeout(this.flip, this.getRandomWaitTime());\n    }\n\n    render() {\n        return (\n            <section className=\"container\">\n                <div className={'card ' + this.state.flipped}>\n                    <ThankCard className={'front ' + this.state.frontColour} row={this.state.front} flipped={this.state.flipped} />\n                    <ThankCard className={'back ' + this.state.backColour} row={this.state.back} flipped={this.state.flipped} />\n                </div>\n            </section>);\n    }\n}","import React, { Component } from 'react';\n\nimport { checkAuth, loadData } from '../data/spreadsheet';\nimport FlippingCards from './FlippingCards';\nimport config from '../config'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      error: null,\n      hasContent: false,\n      authenticated: false\n    }\n\n    this.onLoad = this.onLoad.bind(this);\n    this.onError = this.onError.bind(this);\n    this.updateSigninStatus = this.updateSigninStatus.bind(this);\n  }\n\n  componentDidMount() {\n    checkAuth(true).then(this.handleAuth.bind(this));\n  }\n\n  /**\n   * Check user authenification status and set app state accordingly\n   */\n  handleAuth() {\n    window.gapi.auth2.getAuthInstance().isSignedIn.listen(this.updateSigninStatus)\n    let signedIn = window.gapi.auth2.getAuthInstance().isSignedIn.get();\n    console.log(\"handleAuth\", signedIn)\n    this.updateSigninStatus(signedIn);\n  }\n\n  updateSigninStatus(signedIn) {\n    if (signedIn) {\n      this.setState({\n        authenticated: true\n      });\n      loadData().then(this.onLoad, this.onError);\n    } else {\n      this.setState({\n        authenticated: false,\n        loading: false\n      })\n    }\n  }\n\n  onLoad(data, error) {\n    this.setState({\n      rows: data,\n      hasContent: true,\n      loading: false\n    });\n  }\n\n  onError(error) {\n    this.setState({\n      error: error,\n      hasContent: false,\n      loading: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"banner\">\n          <div className=\"left\"></div>\n          <div className=\"right\"></div>\n        </div>\n        {this.renderContent()}\n      </div>\n    );\n  }\n\n  renderContent() {\n    if (this.state.loading) {\n      return (\n        <div className=\"loader\" />\n      );\n    }\n\n    if (!this.state.authenticated) {\n      return (\n        <button onClick={this.authenticate.bind(this)} className=\"btn\">Connect with Google</button>\n      );\n    }\n    \n    if (this.state.hasContent) {\n      var pairs = new Array(config.gridSize).fill(1);\n      var rows = pairs.map((row, index) => {\n        return (<FlippingCards key={'flip-' + index} />)\n      });\n\n      return (<div className=\"cards\">\n        {rows}\n      </div>\n      );\n    }\n\n    if (this.state.error) {\n      return (\n        <h1> {this.state.error} </h1>\n      );\n    }\n  }\n\n  /**\n   * Request Google authentification\n   */\n  authenticate(e) {\n    e.preventDefault();\n    console.log(\"authenticate\")\n    window.gapi.auth2.getAuthInstance().signIn();\n    // checkAuth(false).then(this.handleAuth.bind(this));\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nimport './styles/index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}